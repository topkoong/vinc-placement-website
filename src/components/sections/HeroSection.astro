---
// Modern Hero section with stunning visuals and animations
import { t } from '@/i18n/utils';
import type { Language } from '@/types';

interface Props {
  lang: Language;
}

const { lang } = Astro.props;

// Hero images for slideshow - using translations for all text
const heroImages = [
  {
    src: 'https://plus.unsplash.com/premium_photo-1661962308717-aa967f951c56?ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D?ixlib=rb-4.0.3&auto=format&fit=crop&w=2070&q=80',
    altKey: 'hero.carousel.slide1_alt',
    titleKey: 'hero.carousel.slide1_title',
  },
  {
    src: 'https://images.unsplash.com/photo-1589939705384-5185137a7f0f?ixlib=rb-4.0.3&auto=format&fit=crop&w=2070&q=80',
    altKey: 'hero.carousel.slide2_alt',
    titleKey: 'hero.carousel.slide2_title',
  },
  {
    src: 'https://images.unsplash.com/photo-1690356107685-3725367f6f3f?ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D?ixlib=rb-4.0.3&auto=format&fit=crop&w=2070&q=80',
    altKey: 'hero.carousel.slide3_alt',
    titleKey: 'hero.carousel.slide3_title',
  },
  {
    src: 'https://plus.unsplash.com/premium_photo-1716396586363-4b942672c2ca?ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D?ixlib=rb-4.0.3&auto=format&fit=crop&w=2070&q=80',
    altKey: 'hero.carousel.slide4_alt',
    titleKey: 'hero.carousel.slide4_title',
  },
];

// Stats data - using translations
const stats = [
  { value: '10,000+', labelKey: 'hero.stats.workers_label' },
  { value: '500+', labelKey: 'hero.stats.companies_label' },
  { value: '35+', labelKey: 'hero.stats.years_label' },
  { value: '20+', labelKey: 'hero.stats.countries_label' },
];
---

<section
  class='relative min-h-screen bg-gradient-to-br from-indigo-50 via-white to-blue-50 dark:from-gray-900 dark:via-gray-800 dark:to-indigo-900 overflow-hidden'
  id='hero'
>
  <!-- Modern Background Elements -->
  <div class='absolute inset-0 pointer-events-none' aria-hidden='true'>
    <!-- Geometric Shapes -->
    <div
      class='absolute top-20 left-10 w-32 h-32 bg-gradient-to-br from-blue-400 to-indigo-500 rounded-3xl rotate-12 opacity-20 animate-pulse'
    >
    </div>
    <div
      class='absolute top-40 right-20 w-24 h-24 bg-gradient-to-br from-purple-400 to-pink-500 rounded-full opacity-30 animate-bounce'
    >
    </div>
    <div
      class='absolute bottom-20 left-1/4 w-40 h-40 bg-gradient-to-br from-cyan-400 to-blue-500 rounded-2xl -rotate-12 opacity-25 animate-pulse'
    >
    </div>

    <!-- Subtle Pattern -->
    <div class='absolute inset-0 opacity-5'>
      <div
        class='absolute inset-0'
        style="background-image: url('data:image/svg+xml,%3Csvg width=%2240%22 height=%2240%22 viewBox=%220 0 40 40%22 xmlns=%22http://www.w3.org/2000/svg%22%3E%3Cg fill=%22%233b82f6%22 fill-opacity=%220.1%22%3E%3Cpath d=%22M20 20c0-11.046-8.954-20-20-20v20h20z%22/%3E%3C/g%3E%3C/svg%3E')"
      >
      </div>
    </div>
  </div>

  <div
    class='relative container mx-auto px-4 sm:px-6 lg:px-8 min-h-screen py-12 md:py-20 lg:py-24 flex items-center'
  >
    <main
      class='grid grid-cols-1 lg:grid-cols-2 gap-8 lg:gap-16 items-center w-full'
    >
      <!-- Left Column - Content -->
      <section class='text-center lg:text-left space-y-6 md:space-y-8'>
        <!-- Badge -->
        <div
          class='inline-flex items-center px-4 py-2 rounded-full bg-blue-100 dark:bg-blue-900/30 text-blue-800 dark:text-blue-200 text-sm font-medium'
        >
          <svg
            class='w-4 h-4 mr-2'
            fill='currentColor'
            viewBox='0 0 20 20'
            aria-hidden='true'
          >
            <path
              fill-rule='evenodd'
              d='M11.3 1.046A1 1 0 0112 2v5h4a1 1 0 01.82 1.573l-7 10A1 1 0 018 18v-5H4a1 1 0 01-.82-1.573l7-10a1 1 0 011.12-.38z'
              clip-rule='evenodd'></path>
          </svg>
          {t(lang, 'hero.badge')}
        </div>

        <!-- Main Heading - Responsive sizes -->
        <h1
          class='text-3xl sm:text-4xl md:text-5xl lg:text-5xl xl:text-6xl font-bold leading-tight tracking-tight'
        >
          <span
            class='block bg-gradient-to-r from-gray-900 via-blue-900 to-indigo-900 dark:from-white dark:via-blue-100 dark:to-indigo-100 bg-clip-text text-transparent'
          >
            {t(lang, 'hero.title')}
          </span>
        </h1>

        <!-- Subtitle -->
        <p
          class='text-base md:text-lg lg:text-xl text-gray-600 dark:text-gray-300 leading-relaxed max-w-2xl mx-auto lg:mx-0'
        >
          {t(lang, 'hero.subtitle')}
        </p>

        <!-- CTA Buttons -->
        <nav
          class='flex flex-col sm:flex-row gap-4 justify-center lg:justify-start'
          aria-label='Main actions'
        >
          <!-- Primary CTA Button -->
          <a
            href={`/${lang}/contact`}
            class='group relative inline-flex items-center justify-center px-6 md:px-8 py-3 md:py-4 bg-gradient-to-r from-blue-600 via-indigo-600 to-purple-600 text-white font-semibold text-sm md:text-base rounded-xl hover:from-blue-700 hover:via-indigo-700 hover:to-purple-700 transition-all duration-300 shadow-lg hover:shadow-xl hover:scale-105 overflow-hidden'
          >
            <div
              class='absolute inset-0 bg-gradient-to-r from-white/20 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300'
              aria-hidden='true'
            >
            </div>
            <span class='relative z-10'>{t(lang, 'hero.cta')}</span>
            <svg
              class='w-5 h-5 ml-2 group-hover:translate-x-1 transition-transform duration-200 relative z-10'
              fill='none'
              stroke='currentColor'
              viewBox='0 0 24 24'
              aria-hidden='true'
            >
              <path
                stroke-linecap='round'
                stroke-linejoin='round'
                stroke-width='2'
                d='M13 7l5 5m0 0l-5 5m5-5H6'></path>
            </svg>
          </a>

          <!-- Secondary CTA Button -->
          <a
            href={`/${lang}/services`}
            class='group relative inline-flex items-center justify-center px-6 md:px-8 py-3 md:py-4 border-2 border-blue-600 text-blue-600 dark:text-blue-400 dark:border-blue-400 font-semibold text-sm md:text-base rounded-xl hover:bg-blue-600 hover:text-white dark:hover:bg-blue-400 dark:hover:text-gray-900 transition-all duration-300 shadow-md hover:shadow-lg hover:scale-105 backdrop-blur-sm bg-white/80 dark:bg-gray-800/80'
          >
            <div
              class='absolute inset-0 bg-gradient-to-r from-blue-600 to-indigo-600 opacity-0 group-hover:opacity-100 transition-opacity duration-300 rounded-xl'
              aria-hidden='true'
            >
            </div>
            <span class='relative z-10'>{t(lang, 'hero.learn_more')}</span>
            <svg
              class='w-5 h-5 ml-2 group-hover:translate-x-1 transition-transform duration-200 relative z-10'
              fill='none'
              stroke='currentColor'
              viewBox='0 0 24 24'
              aria-hidden='true'
            >
              <path
                stroke-linecap='round'
                stroke-linejoin='round'
                stroke-width='2'
                d='M9 5l7 7-7 7'></path>
            </svg>
          </a>
        </nav>

        <!-- Stats -->
        <section class='w-full' aria-label='Company statistics'>
          <div class='grid grid-cols-2 lg:grid-cols-4 gap-4 max-w-4xl mx-auto'>
            {
              stats.map((stat, index) => (
                <figure class='bg-white dark:bg-gray-800 rounded-lg p-4 text-center shadow-sm border border-gray-100 dark:border-gray-700'>
                  <div class='text-lg font-bold text-blue-600 dark:text-blue-400 mb-1'>
                    {stat.value}
                  </div>
                  <figcaption class='text-xs text-gray-600 dark:text-gray-400'>
                    {t(lang, stat.labelKey)}
                  </figcaption>
                </figure>
              ))
            }
          </div>
        </section>
      </section>

      <!-- Right Column - Image Slideshow -->
      <aside class='relative order-first lg:order-last'>
        <figure
          class='relative w-full h-80 md:h-96 lg:h-[500px] rounded-3xl overflow-hidden shadow-2xl'
        >
          <div id='hero-slideshow' class='relative w-full h-full'>
            {
              heroImages.map((image, index) => (
                <div
                  class={`absolute inset-0 transition-opacity duration-1000 ${index === 0 ? 'opacity-100' : 'opacity-0'}`}
                  data-slide={index}
                >
                  <img
                    src={image.src}
                    alt={t(lang, image.altKey)}
                    class='w-full h-full object-cover'
                  />
                  <div
                    class='absolute inset-0 bg-gradient-to-t from-black/60 via-transparent to-transparent'
                    aria-hidden='true'
                  />
                  <figcaption class='absolute bottom-4 md:bottom-6 left-4 md:left-6 text-white'>
                    <h3 class='text-lg md:text-xl font-bold mb-1 md:mb-2'>
                      {t(lang, image.titleKey)}
                    </h3>
                    <p class='text-xs md:text-sm opacity-90 hidden sm:block'>
                      {t(lang, image.altKey)}
                    </p>
                  </figcaption>
                </div>
              ))
            }
          </div>

          <div
            class='absolute bottom-3 md:bottom-4 right-3 md:right-4 flex space-x-2'
            role='tablist'
            aria-label='Image slideshow controls'
          >
            {
              heroImages.map((_, index) => (
                <button
                  class={`w-2 h-2 md:w-3 md:h-3 rounded-full transition-all duration-300 ${index === 0 ? 'bg-white' : 'bg-white/50'}`}
                  data-slide-btn={index}
                  aria-label={`Go to slide ${index + 1}`}
                  role='tab'
                  aria-selected={index === 0}
                />
              ))
            }
          </div>

          <button
            id='prev-slide'
            class='absolute left-2 md:left-4 top-1/2 transform -translate-y-1/2 w-10 h-10 md:w-12 md:h-12 bg-white/20 backdrop-blur-sm rounded-full flex items-center justify-center text-white hover:bg-white/30 transition-all duration-300'
            aria-label='Previous slide'
          >
            <svg
              class='w-5 h-5 md:w-6 md:h-6'
              fill='none'
              stroke='currentColor'
              viewBox='0 0 24 24'
              aria-hidden='true'
            >
              <path
                stroke-linecap='round'
                stroke-linejoin='round'
                stroke-width='2'
                d='M15 19l-7-7 7-7'></path>
            </svg>
          </button>

          <button
            id='next-slide'
            class='absolute right-2 md:right-4 top-1/2 transform -translate-y-1/2 w-10 h-10 md:w-12 md:h-12 bg-white/20 backdrop-blur-sm rounded-full flex items-center justify-center text-white hover:bg-white/30 transition-all duration-300'
            aria-label='Next slide'
          >
            <svg
              class='w-5 h-5 md:w-6 md:h-6'
              fill='none'
              stroke='currentColor'
              viewBox='0 0 24 24'
              aria-hidden='true'
            >
              <path
                stroke-linecap='round'
                stroke-linejoin='round'
                stroke-width='2'
                d='M9 5l7 7-7 7'></path>
            </svg>
          </button>
        </figure>

        <div
          class='absolute -top-6 -right-6 w-20 h-20 md:w-24 md:h-24 bg-gradient-to-br from-yellow-400 to-orange-500 rounded-2xl rotate-12 opacity-80 animate-pulse hidden md:block'
          aria-hidden='true'
        >
        </div>
        <div
          class='absolute -bottom-6 -left-6 w-16 h-16 md:w-20 md:h-20 bg-gradient-to-br from-green-400 to-blue-500 rounded-full opacity-70 animate-bounce hidden md:block'
          aria-hidden='true'
        >
        </div>
      </aside>
    </main>
  </div>

  <div
    id='scroll-indicator'
    class='absolute bottom-6 left-1/2 transform -translate-x-1/2 z-10 hidden md:flex'
    aria-label='Scroll to explore more content'
  >
    <div class='flex flex-col items-center'>
      <div
        class='bg-white/90 dark:bg-gray-800/90 backdrop-blur-sm rounded-full px-4 py-2 shadow-lg border border-gray-200/60 dark:border-gray-700/60'
      >
        <span
          class='text-xs font-medium text-gray-600 dark:text-gray-400 mb-1 block'
          >{t(lang, 'hero.scroll_text')}</span
        >
        <div
          class='w-4 h-6 border-2 border-gray-300 dark:border-gray-600 rounded-full flex justify-center items-start mx-auto overflow-hidden'
        >
          <div
            class='w-1 h-2 bg-gray-500/80 dark:bg-gray-400/80 rounded-full mt-1 animate-bounce'
          >
          </div>
        </div>
      </div>
    </div>
  </div>
</section>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const slideshow = document.getElementById('hero-slideshow');
    const slides = slideshow?.querySelectorAll('[data-slide]');
    const dots = document.querySelectorAll('[data-slide-btn]');
    const prevBtn = document.getElementById('prev-slide');
    const nextBtn = document.getElementById('next-slide');

    if (!slides || !dots || !prevBtn || !nextBtn) return;

    let currentSlide = 0;
    const totalSlides = slides.length;

    function showSlide(index: number) {
      slides.forEach((slide) => {
        slide.classList.remove('opacity-100');
        slide.classList.add('opacity-0');
      });

      slides[index].classList.remove('opacity-0');
      slides[index].classList.add('opacity-100');

      dots.forEach((dot, i) => {
        if (i === index) {
          dot.classList.remove('bg-white/50');
          dot.classList.add('bg-white');
        } else {
          dot.classList.remove('bg-white');
          dot.classList.add('bg-white/50');
        }
      });
    }

    function nextSlide() {
      currentSlide = (currentSlide + 1) % totalSlides;
      showSlide(currentSlide);
    }

    function prevSlide() {
      currentSlide = (currentSlide - 1 + totalSlides) % totalSlides;
      showSlide(currentSlide);
    }

    nextBtn.addEventListener('click', nextSlide);
    prevBtn.addEventListener('click', prevSlide);

    dots.forEach((dot, index) => {
      dot.addEventListener('click', () => {
        currentSlide = index;
        showSlide(currentSlide);
      });
    });

    setInterval(nextSlide, 5000);

    const scrollIndicator = document.getElementById('scroll-indicator');
    if (scrollIndicator) {
      const onScroll = () => {
        if (window.scrollY > 80) {
          scrollIndicator.style.opacity = '0';
        } else {
          scrollIndicator.style.opacity = '1';
        }
      };
      window.addEventListener('scroll', onScroll, { passive: true });
      onScroll();
    }
  });
</script>

<style>
  .bg-clip-text {
    -webkit-background-clip: text;
    background-clip: text;
  }

  /* Hide scrollbar but keep functionality */
  .scrollbar-hide {
    -ms-overflow-style: none;
    scrollbar-width: none;
  }
  .scrollbar-hide::-webkit-scrollbar {
    display: none;
  }
</style>
